
@{
    ViewBag.Title = "Appoinments";
}

<link href='../scripts/calendar/fullcalendar.min.css' rel='stylesheet' />
<link href='../scripts/calendar/fullcalendar.print.min.css' rel='stylesheet' media='print' />
<script src='../scripts/calendar/lib/moment.min.js'></script>

<script src='../scripts/calendar/fullcalendar.js'></script>
<script src='../scripts/calendar/locale-all.js'></script>
<style>

    .body-content .container { /*PatricioTovar - Bigger calendar view, fix height whit aspectRatio option */
        max-width: 100%;
        padding: 0px 40px;
    }

    #calendar a {
        color: inherit;
    }
</style>
<script>
    var selectedStartDate = null;
    var selectedEndDate = null;
    $(function () {
        var _associateID = '@(ViewBag.AssociateID)';
        var _associateName = '@(ViewBag.AssosiateName)';
        var today = new Date();
        var initialLocaleCode = 'en';

        var doubleClick = null;
        var clickTimer = null;

        $.fn.bootstrapBtn = $.fn.button.noConflict();

        var today = new Date();
        $("#dpStart").datepicker({
            onSelect: function (dateText, inst) {
                $("#dpEnd").datepicker("setDate", dateText);
                $("#dpEnd").datepicker("option", { minDate: dateText });
            }
        }).datepicker("setDate", today);
        $("#dpEnd").datepicker({ minDate: today }).datepicker("setDate", today);

        //load associates
        $.ajax({
            url: '/customer/GetAssociates/',
            type: 'POST',
            //dataType: 'json',
            traditional: true,
            contentType: 'application/json;',
            success: function (result) {

                if (result != '0') {
                    var ddlAssignedTo = $('#ddlAssignedTo');
                    var ddlAssociateFilter = $('#ddlAssociateFilter');
                    var legendContent = $('<ul>')
                        .addClass("fa-ul")
                        .css("margin-left", 0);
                    $.each(result, function () {
                        ddlAssignedTo.append($('<option />').val(this.AssociateID).text(this.FirstName + ' ' + this.LastName));
                        ddlAssociateFilter.append($("<option />").val(this.AssociateID).text(this.FirstName + ' ' + this.LastName));

                        var li = $('<li/>')
                            .text(this.FirstName + ' ' + this.LastName)
                            .appendTo(legendContent);
                        var icon = $('<i/>')
                            .addClass('fa fa-circle fa-lg fa-fw')
                            .css("color", this.BackgroundColor)
                            .prependTo(li);
                    });

                    $("#btnLegend").popover({ html: true, placement: "left", content: legendContent.prop('outerHTML'), container: "#calendar", trigger: "hover"})
                } else {
                    $.AlertDialog('There was an error loading the page.', 'Error Message', function (event) { }, 'lightcoral');
                }
            }
        });


        var createapptdialog = $("#create-appt-dialog").dialog({
            autoOpen: false,
            draggable: false,
            //height: 675,
            width: 700,
            modal: true,
            //position: ['center', 130],
            //open: function (event, ui) {
            //    $(".ui-dialog").find(".ui-widget-header").css("background", 'beige');
            //},
            buttons: {
                Delete: {
                    id: "btnDeleteAppoiment",
                    class: "ui-state-error pull-left",
                    text: "Delete",
                    icon: "ui-icon-trash",
                    click: function () {
                        $.ConfirmDialog('Are you sure about delete this appoinment?', 'Confirm', function () {
                            //ajax call to delete using appt id
                            $.ajax({
                                url: '/appointments/DeleteAppointment/',
                                type: 'POST',
                                data: JSON.stringify({ AppointmentID: $('#hdnApptID').val() }),
                                //dataType: 'json',
                                traditional: true,
                                contentType: 'application/json;',
                                success: function (result) { //result is returned as an arry of base flavors
                                    if (result == '1') {
                                        createapptdialog.dialog("close");
                                        $('#calendar').fullCalendar('removeEvents', $('#hdnApptID').val());
                                        $.AlertDialog('Appointment was deleted successfully', 'Success', function (event) { }, 'lightgreen');
                                    } else {
                                        $.AlertDialog(result, 'Error Message', function (event) { }, 'lightcoral');
                                        $("#calendar").fullCalendar('refetchEvents')
                                    }
                                },
                                error: function (jqXHR, error, errorThrown) {
                                    $.AlertDialog(errorThrown, 'Error Message', function (error) { }, 'red');
                                    $("#calendar").fullCalendar('refetchEvents')
                                }
                            });

                        }, function () { }, null, 'lightcoral');
                    }
                },
                Update: function () {

                    var LIdateTime;
                    var LOdateTime;

                    if ($("#chkAllDay").is(':checked')) {
                        LIdateTime = $('#dpStart').val() + ' 00:00';
                        LOdateTime = $('#dpEnd').val() + ' 23:59';
                    } else {
                        LIdateTime = $('#dpStart').val() + ' ' + $("#ddlLIHours option:selected").val() + ":" + $("#ddlLIMinutes option:selected").val() + " " + $("#ddlLIAMPM option:selected").val();
                        LOdateTime = $('#dpEnd').val() + ' ' + $("#ddlLOHours option:selected").val() + ":" + $("#ddlLOMinutes option:selected").val() + " " + $("#ddlLOAMPM option:selected").val();
                    }

                    if ($('#txtCreateTitledlg').val().trim() == '') {
                        $.AlertDialog('You must include an appointment title.', 'Error Message', function (event) { }, 'lightcoral');
                        return;
                    }

                    if ($('#txtCreateDescdlg').val().trim() == '') {
                        $.AlertDialog('You must include an appointment description.', 'Error Message', function (event) { }, 'lightcoral');
                        return;
                    }
                    //debugger

                    if (!$("#chkAllDay").is(':checked')) {
                        if ($('#ddlLIHours').val() == '' | $('#ddlLIHours').val() == null) {
                            $.AlertDialog('You must select start hours.', 'Error Message', function (event) { }, 'lightcoral');
                            return;
                        }

                        if ($('#ddlLIMinutes').val() == '' | $('#ddlLIMinutes').val() == null) {
                            $.AlertDialog('You must select start minutes.', 'Error Message', function (event) { }, 'lightcoral');
                            return;
                        }
                        if ($('#ddlLIAMPM').val() == '' | $('#ddlLIAMPM').val() == null) {
                            $.AlertDialog('You must select start AM/PM', 'Error Message', function (event) { }, 'lightcoral');
                            return;
                        }
                        if ($('#ddlLOHours').val() == '' | $('#ddlLOHours').val() == null) {
                            $.AlertDialog('You must select end hours.', 'Error Message', function (event) { }, 'lightcoral');
                            return;
                        }
                        if ($('#ddlLOMinutes').val() == '' | $('#ddlLOMinutes').val() == null) {
                            $.AlertDialog('You must select end minutes', 'Error Message', function (event) { }, 'lightcoral');
                            return;
                        }
                        if ($('#ddlLOAMPM').val() == '' | $('#ddlLOAMPM').val() == null) {
                            $.AlertDialog('You must select end AM/PM', 'Error Message', function (event) { }, 'lightcoral');
                            return;
                        }
                    }

                    if (moment(LIdateTime) > moment(LOdateTime)) {
                        $.AlertDialog('End Date cannot be before Start Date.', 'Error Message', function (event) { }, 'lightcoral');
                        return;
                    }

                    appt = {
                        AppointmentID: $('#hdnApptID').val(),
                        StartDateString: LIdateTime.toString(),
                        EndDateString: LOdateTime.toString(),
                        AppointmentName: $('#txtCreateTitledlg').val(),
                        Description: $('#txtCreateDescdlg').val(),
                        AssignedTo: $('#ddlAssignedTo').val(),
                        CreatedDate: (new Date()).toLocaleString(),
                        Active: 1
                    }






                    $.ajax({
                        url: '/appointments/AddAppointment/',
                        type: 'POST',
                        data: JSON.stringify({ appointment: appt }),
                        //dataType: 'json',
                        traditional: true,
                        contentType: 'application/json;',
                        success: function (result) { //result is returned as an arry of base flavors
                            if (result.startsWith == '0-') {
                                $.AlertDialog(result, 'Error Message', function (event) { }, 'lightcoral');
                            } else {
                                newData = {
                                    title: result.AppointmentName,
                                    start: result.StartDateString,
                                    end: result.EndDate,
                                    description: result.Description,
                                    textColor: result.TextColor,
                                    backgroundColor: result.BackGroundColor,// will be parsed
                                    apptid: result.AppointmentID,
                                    allDay: result.AllDay
                                }

                                if (moment(result.EndDateString).diff(moment(result.StartDateString), 'days') > 0) {
                                    newData.allDay = true;
                                }

                                //$('#calendar').fullCalendar('renderEvent', newData, true);

                                $.AlertDialog('Appointment was added successfully', 'Success', function (event) { }, 'lightgreen');
                                $('#calendar').fullCalendar('refetchEvents');
                                createapptdialog.dialog("close");
                            }
                        },
                        error: function (jqXHR, error, errorThrown) {
                            $.AlertDialog(errorThrown, 'Error Message', function (error) { }, 'lightcoral');
                        }
                    });

                    $('#calendar').fullCalendar('unselect');
                },
                Close: function () {
                    $('#txtCreateTitledlg').val('');
                    $('#txtCreateDescdlg').val('');

                    var _now = new Date;

                    $("#dpStart").datepicker().datepicker("setDate", new Date());
                    $("#dpEnd").datepicker().datepicker("setDate", new Date());

                    createapptdialog.dialog("close");
                }
            }
        });

        function resetDialog() {

            $('#txtCreateTitledlg').val('');
            $('#txtCreateDescdlg').val('');

            //$("#ddlAssignTo").val($("#ddlAssignTo option:first").val());
            $("#ddlAssignedTo").val(_associateID);
            $('#lblCreatedByName').text(_associateName);
            $('#lblCreatedDate').text(moment(new Date).format("DD/MM/YYYY"))

            $('#hdnApptID').val('0');

            $('#chkAllDay').prop('checked', false);

            $('#ddlLIHours').val('');
            $('#ddlLIMinutes').val('');
            $('#ddlLIAMPM').val('');
            $('#ddlLOHours').val('');
            $('#ddlLOMinutes').val('');
            $('#ddlLOAMPM').val('');

            $('#create-appt-dialog .start').show();
            $('#create-appt-dialog .end').show();
        }

        $('#chkAllDay').on('click', function () {

            if ($(this).is(':checked')) {
                $('#create-appt-dialog .start').hide();
                $('#create-appt-dialog .end').hide();
            } else {
                $('#ddlLIHours').val('');
                $('#ddlLIMinutes').val('');
                $('#ddlLIAMPM').val('');
                $('#ddlLOHours').val('');
                $('#ddlLOMinutes').val('');
                $('#ddlLOAMPM').val('');

                $('#create-appt-dialog .start').show();
                $('#create-appt-dialog .end').show();
            }

        });

        $('#calendar').fullCalendar({
            themeSystem: 'bootstrap3',
            header: {
                left: 'AddAppt  prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay,listMonth Reload Legend'
            },
            customButtons: {
                AddAppt: { //PT - create class .fc-AddAppt-button in button
                    text: 'Add appoinment',
                    click: function () {
                        openCreateApptDialog();
                    }
                },
                Reload: { //PT - create class .fc-Reload-button in button
                    text: 'Reload',
                    click: function () {
                        $("#calendar").fullCalendar('refetchEvents');
                    }
                }
            },
            aspectRatio: 2.5, //PatricioTovar
            //height: "parent",
            //defaultDate: today.getMonth() + 1 + '/' + today.getDate() + '/' + today.getFullYear(),
            locale: initialLocaleCode,
            buttonIcons: true, // show the prev/next text
            weekNumbers: true,
            navLinks: true, // can click day/week names to navigate views
            editable: true,
            eventLimit: true, // allow "more" link when too many events
            selectable: true,
            selectHelper: true,
            timezone: 'local',
            eventOverlap: true,
            unselectAuto: false, // prevent unselect when click outside of the calendar
            slotLabelFormat: ['h:mm', 'h:mm'],  // top level of text ,  lower level of text
            eventTimeFormat: 'h(:mm)',
            displayEventEnd: true,
            loading: function (bool) {

            },
            dayClick: function (date, allDay, jsEvent, view) {
                //Pseudo doubleClick 
                var singleClick = date.format();
                if (doubleClick == singleClick) {
                    openCreateApptDialog();
                    doubleClick = null;
                } else {
                    doubleClick = date.format();
                    clearInterval(clickTimer);
                    clickTimer = setInterval(function () {
                        doubleClick = null;
                        clearInterval(clickTimer);
                    }, 500);
                }
            },
            select: function (start, end) {  //event for creating
                selectedStartDate = start;
                selectedEndDate = end;
            },

            unselect: function () {
                selectedStartDate = null;
                selectedEndDate = null;
            },

            eventClick: function (calEvent, jsEvent, view) {
                //Load the event selected
                //debugger

                $('#calendar').fullCalendar('select', calEvent.start); //PT - Select the date of the event

                resetDialog();

                $('#txtCreateTitledlg').val(calEvent.title);
                $('#txtCreateDescdlg').val(calEvent.description);
                $('#hdnApptID').val(calEvent.apptid);

                $('#dpStart').val(moment(calEvent.start, 'MM/DD/YYYY').format('MM/DD/YYYY'));
                $("#dpEnd").datepicker("option", { minDate: moment(calEvent.start, 'MM/DD/YYYY').format('MM/DD/YYYY') });
                $('#ddlAssignedTo').val(calEvent.assignedto);
                $('#lblCreatedByName').text(calEvent.createdbyname);
                $('#lblCreatedDate').text(moment(calEvent.createddate).format("DD/MM/YYYY"));


                if (calEvent.allDay) {
                    $('#create-appt-dialog .start').hide();
                    $('#create-appt-dialog .end').hide();

                    $('#ddlLIHours').val('');
                    $('#ddlLIMinutes').val('');
                    $('#ddlLIAMPM').val('');
                    $('#ddlLOHours').val('');
                    $('#ddlLOMinutes').val('');
                    $('#ddlLOAMPM').val('');

                    $('#chkAllDay').prop("checked", true);
                    $('#dpEnd').val(moment(calEvent.end, 'MM/DD/YYYY').add(-1, 'days').format('MM/DD/YYYY'));
                } else {
                    $('#create-appt-dialog .start').show();
                    $('#create-appt-dialog .end').show();

                    $('#ddlLIHours').val(moment(calEvent.start, 'MM/DD/YYYY HH:mm A').format('h'));
                    $('#ddlLIMinutes').val(moment(calEvent.start, 'MM/DD/YYYY HH:mm A').format('mm'));
                    $('#ddlLIAMPM').val(moment(calEvent.start, 'MM/DD/YYYY HH:mm A').format('A'));

                    $('#ddlLOHours').val(moment(calEvent.end, 'MM/DD/YYYY HH:mm A').format('h'));
                    $('#ddlLOMinutes').val(moment(calEvent.end, 'MM/DD/YYYY HH:mm A').format('mm'));
                    $('#ddlLOAMPM').val(moment(calEvent.end, 'MM/DD/YYYY HH:mm A').format('A'));

                    $('#chkAllDay').prop("checked", false);
                    $('#dpEnd').val(moment(calEvent.end, 'MM/DD/YYYY').format('MM/DD/YYYY'));
                }

                $("#btnDeleteAppoiment").show();
                createapptdialog.dialog("open");


            },
            eventResize: function (event, delta, revertFunc) { //this is for changing the time
                $.ConfirmDialog('Change event times? Continue?', 'Change Event Time', function () {
                    $.ajax({
                        url: '/appointments/UpdateAppointment/',
                        type: 'POST',
                        data: JSON.stringify({ AppointmentID: event.apptid, StartDate: event.start.format().toString(), EndDate: event.end.format().toString() }),
                        //dataType: 'json',
                        traditional: true,
                        contentType: 'application/json;',
                        success: function (result) { //result is returned as an arry of base flavors
                            if (result == '1') {
                                $.AlertDialog('Appointment duration was successfully updated', 'Success', function (event) { }, 'lightgreen');
                            } else {
                                $.AlertDialog(result, 'Error Message', function (event) { }, 'lightcoral');
                                revertFunc();
                            }
                        },
                        error: function (jqXHR, error, errorThrown) {
                            $.AlertDialog(errorThrown, 'Error Message', function (error) { }, 'lightcoral');
                            revertFunc();
                        }
                    });
                }, function () {
                    revertFunc();
                }, null, 'yellow');
            },

            //eventDragStop: function (calEvent, jsEvent, ui, view) {
            //    var trashEl = $('#calendarTrash');
            //    var ofs = trashEl.offset();

            //    var x1 = ofs.left;
            //    var x2 = ofs.left + trashEl.outerWidth(true);
            //    var y1 = ofs.top;
            //    var y2 = ofs.top + trashEl.outerHeight(true);

            //    if (jsEvent.pageX >= x1 && jsEvent.pageX <= x2 &&
            //        jsEvent.pageY >= y1 && jsEvent.pageY <= y2) {

            //        $.ConfirmDialog('Delete Appointment:  "' + calEvent.title + '"?', 'Delete Appointment', function () {
            //            //ajax call to delete using appt id
            //            $.ajax({
            //                url: '/appointments/DeleteAppointment/',
            //                type: 'POST',
            //                data: JSON.stringify({ AppointmentID: calEvent.apptid }),
            //                //dataType: 'json',
            //                traditional: true,
            //                contentType: 'application/json;',
            //                success: function (result) { //result is returned as an arry of base flavors

            //                    if (result == '1') {
            //                        $.AlertDialog('Appointment was deleted successfully', 'Success', function (event) { }, 'lightgreen');
            //                    } else {
            //                        $.AlertDialog(result, 'Error Message', function (event) { }, 'lightcoral');
            //                        $("#calendar").fullCalendar('refetchEvents')
            //                    }
            //                },
            //                error: function (jqXHR, error, errorThrown) {
            //                    $.AlertDialog(errorThrown, 'Error Message', function (error) { }, 'red');
            //                    $("#calendar").fullCalendar('refetchEvents')
            //                }
            //            });

            //            $('#calendar').fullCalendar('removeEvents', calEvent._id);
            //        }, function () { }, null, 'lightcoral');
            //    }
            //},
            eventDrop: function (event, delta, revertFunc, jsEvent, ui, view) {
                if (event.allDay) {
                    //set start date and date date to full day
                    event.start = moment(moment(event.start, 'MM/DD/YYYY').format('MM/DD/YYYY') + ' 00:00:00');

                    event.end = moment(moment(event.start, 'MM/DD/YYYY').format('MM/DD/YYYY') + ' 23:59:00');
                } else {
                    if (event.end == null) {
                        var defaultDuration = moment.duration($('#calendar').fullCalendar('option', 'defaultTimedEventDuration')); // get the default and convert it to proper type
                        var end = event.end || event.start.clone().add(defaultDuration); // If there is no end, compute it

                        event.end = end
                    }
                }
                //debugger
                $.ConfirmDialog('Change event times? Continue?', 'Confirm', function () {
                    $.ajax({
                        url: '/appointments/UpdateAppointment/',
                        type: 'POST',
                        data: JSON.stringify({ AppointmentID: event.apptid, StartDate: moment.utc(event.start).format().toString(), EndDate: moment.utc(event.end).format().toString() }),
                        //dataType: 'json',
                        traditional: true,
                        contentType: 'application/json;',
                        success: function (result) {
                            if (result == '1') {
                                if (event.allDay) {
                                    $.AlertDialog('Appointment was rescheduled successfully for all day: ' + moment(event.start, 'MM/DD/YYYY').format('MM/DD/YYYY'), 'Success', function (event) { }, 'lightgreen');
                                } else {
                                    $.AlertDialog('Appointment was rescheduled successfully to ' + moment(event.start, 'MM/DD/YYYY').format('MM/DD/YYYY'), 'Success', function (event) { }, 'lightgreen');
                                }
                                $('#calendar').fullCalendar('refetchEvents');
                                //$('#calendar').fullCalendar('gotoDate', moment(event.start, 'MM/DD/YYYY').format('MM/DD/YYYY'));

                            } else {
                                //debugger
                                $.AlertDialog(result, 'Error Message', function (event) { }, 'lightcoral');
                                revertFunc();
                            }
                        }
                    });
                }, function () {
                    revertFunc();
                }, null, 'yellow');
            },
            eventRender: function (event, element) {
                var associateFilter = $("#ddlAssociateFilter").val();
                return associateFilter == 0 || event.assignedto == associateFilter;
            },
            eventDestroy: function (event, element, view) {
                //alert('eventDestroy on "' + event.title + '"');
                //console.log(event, element, view);
            },
            eventDataTransform: function (event) {
                if (event.allDay) {
                    event.end = moment(event.end).add(1, 'days')
                }
                return event;
            },
            events: function (start, end, timezone, callback) {
                $.ajax({
                    url: '/appointments/GetAppointmentsByRange/',
                    data: {
                        StartDate: start.format("MM/DD/YYYY"),
                        EndDate: end.format("MM/DD/YYYY")
                    },
                    success: function (result) {
                        var events = [];
                        if (result.Res) {
                            var associateFilter = $("#ddlAssociateFilter").val();
                            $(result.Object).each(function (index, value) {
                                    events.push({
                                        id: value.AppointmentID,
                                        title: value.AppointmentName,
                                        //start: value.StartDateString,
                                        //end: value.EndDateString,
                                        start: moment(value.StartDate).format(),
                                        end: moment(value.EndDate).format(),
                                        description: value.Description,
                                        textColor: value.TextColor,
                                        backgroundColor: value.BackGroundColor,// will be parsed
                                        borderColor: value.BackGroundColor,
                                        apptid: value.AppointmentID,
                                        allDay: value.AllDay,
                                        assignedto: value.AssignedTo,
                                        createdby: value.CreatedBy,
                                        createdbyname: value.CreatedByName,
                                        createddate: value.CreatedDate
                                    });
                            });
                        } else {
                            $.AlertDialog(result.Message, 'Error Message', null, 'lightcoral');
                        }
                        callback(events);
                    }
                });
            },

            eventLimitClick: function (cellInfo, jsEvent) {

                $('#calendar').fullCalendar('select', cellInfo.date); //PT - Select the date of the event
                return 'popover';
            }
        });

        //PT - Add Appoinment buttom custom
        $('.fc-AddAppt-button').addClass('btn-info');
        $('.fc-AddAppt-button').prepend('<i class="fa fa-calendar-plus-o fa-fw" aria-hidden="true"></i>');
        //PT - Reload calendar buttom custom
        $('.fc-Reload-button').prepend('<i class="fa fa-refresh fa-fw" aria-hidden="true"></i>');


        function openCreateApptDialog() {
            resetDialog();

            if (selectedStartDate != null && selectedStartDate != null) { //Patricio Tovar - use the current dates selection in calendar
                $('#dpStart').val(moment(selectedStartDate).format('MM/DD/YYYY'));
                $('#dpEnd').val(moment(selectedStartDate).format('MM/DD/YYYY'));
                $("#dpEnd").datepicker("option", { minDate: moment(selectedStartDate).format('MM/DD/YYYY') });
            }

            $('#hdnApptID').val('0');
            $("#btnDeleteAppoiment").hide();
            createapptdialog.dialog("open");
        }
    });

    

    function updateEndHour() {
        var startHour = $("#ddlLIHours").val();
        if (startHour != null && $("#ddlLOHours").val() == null) {
            var endHour = parseInt(startHour) + 1;
            if (endHour == 13) {
                endHour = 1;
            }
            $("#ddlLOHours").val(endHour);
        }
    }

    function updateEndMinutes() {
        var startMinutes = $("#ddlLIMinutes").val();
        if (startMinutes != null && $("#ddlLOMinutes").val() == null) {
            $("#ddlLOMinutes").val(startMinutes);
        }
    }

    function updateEndAMPM() {
        var startAMPM = $("#ddlLIAMPM").val();
        if (startAMPM != null && $("#ddlLOAMPM").val() == null) {

            var startHour = $("#ddlLIHours").val();
            var startMinutes = $("#ddlLIMinutes").val();

            var endHour = $("#ddlLOHours").val();
            var endMinutes = $("#ddlLOMinutes").val();

            if ((startHour < endHour && endHour != 12) || (startHour == 12 && startHour > endHour) || (startHour == endHour && startMinutes >= endMinutes)) {
                $("#ddlLOAMPM").val(startAMPM);
            } else {
                if (startAMPM == "AM") {
                    $("#ddlLOAMPM").val("PM");
                } else if (startAMPM == "PM") {
                    $("#ddlLOAMPM").val("AM");
                }
            }

        }
    }

</script>

<div class="form-horizontal" style="margin-top: 10px;">
    <div class="form-group">
        <div class="col-sm-1">
            <label class="control-label text-left" for="ddlAssociateFilter">Associate:</label>
        </div>
        <div class="col-sm-2">
            <select id="ddlAssociateFilter" class="form-control" onchange="$('#calendar').fullCalendar('rerenderEvents');">
                <option value="0" selected>All</option>
            </select>
        </div>
        <div class="col-sm-1 col-sm-offset-8 text-right">
            <button id="btnLegend" class="btn">
                <i class="fa fa-list-ul fa-fw fa-lg" aria-hidden="true"></i>
            </button>
        </div>
    </div>
</div>

<div id='calendar' style="margin-top: 10px;"></div>


<div id="create-appt-dialog" title="Create Appointment">
    <input type="hidden" id="hdnApptID" />
    <div class="row">
        <div class="form-group col-sm-12">
            <label for="txtCreateTitledlg">Title:</label>
            <input type="text" class="form-control" id="txtCreateTitledlg" data-required="true" data-name="Title" maxlength="100">
        </div>
        <div class="form-group col-sm-12">
            <label for="txtCreateDescdlg">Description:</label>
            <textarea class="form-control" rows="3" id="txtCreateDescdlg" data-required="true" data-name="Description" maxlength="500"></textarea>
        </div>
        <div class="form-group col-sm-5">
            <label for="txtCreateDescdlg">Assigned:</label>
            <select id="ddlAssignedTo" class="form-control"></select>
        </div>
        <div class="form-group col-sm-4">
            <label>Created by:</label>
            <p id="lblCreatedByName" class="form-control-static"></p>
        </div>
        <div class="form-group col-sm-3">
            <label>Created date:</label>
            <p id="lblCreatedDate" class="form-control-static"></p>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-5">
            <div style="width:100%">
                <label for="dpStart">Start Date:</label>
                <div class="checkbox" style="display:inline-block; float:right; margin-bottom:0px; margin-top:0px">
                    <label>
                        <input id="chkAllDay" type="checkbox">All day
                    </label>
                </div>
            </div>
            <div class="input-group margin-bottom-sm">
                <input type="text" id="dpStart" class="form-control" readonly="readonly">
                <span class="input-group-addon btn btn-default" onclick="$('#dpStart').focus();"><i class="fa fa-calendar fa-lg fa-fw"></i></span>
            </div>
        </div>
        <div class="form-group col-sm-4 start">
            <label for="ddlLIHours">Start Time:</label>
            <div class="input-group">
                <select id="ddlLIHours" class="form-control" dir="rtl" onchange="updateEndHour()" required>
                    <option value="" disabled hidden>Hour</option>
                    <option value="1">01</option>
                    <option value="2">02</option>
                    <option value="3">03</option>
                    <option value="4">04</option>
                    <option value="5">05</option>
                    <option value="6">06</option>
                    <option value="7">07</option>
                    <option value="8">08</option>
                    <option value="9">09</option>
                    <option value="10">10</option>
                    <option value="11">11</option>
                    <option value="12">12</option>
                </select>
                <span class="input-group-addon"><strong>:</strong></span>
                <select id="ddlLIMinutes" class="form-control" onchange="updateEndMinutes()" required>
                    <option value="" disabled hidden>Min</option>
                    <option value="00">00</option>
                    <option value="15">15</option>
                    <option value="30">30</option>
                    <option value="45">45</option>
                </select>
            </div>
        </div>
        <div class="form-group col-sm-3 start">
            <label class="empty-label">&nbsp;</label>
            <select id="ddlLIAMPM" class="form-control" onchange="updateEndAMPM()" required>
                <option value="" disabled hidden>AM/PM</option>
                <option value="AM">AM</option>
                <option value="PM">PM</option>
            </select>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-5">
            <label for="dpStart">End Date:</label>
            <div class="input-group margin-bottom-sm">
                <input type="text" id="dpEnd" class="form-control" readonly="readonly">
                <span class="input-group-addon btn btn-default" onclick="$('#dpEnd').focus();"><i class="fa fa-calendar fa-lg fa-fw"></i></span>
            </div>
        </div>
        <div class="form-group col-sm-4 end">
            <label for="ddlLOHours">End Time:</label>
            <div class="input-group">
                <select id="ddlLOHours" class="form-control" dir="rtl" onchange="updateEndHour()" required>
                    <option value="" disabled hidden>Hour</option>
                    <option value="1">01</option>
                    <option value="2">02</option>
                    <option value="3">03</option>
                    <option value="4">04</option>
                    <option value="5">05</option>
                    <option value="6">06</option>
                    <option value="7">07</option>
                    <option value="8">08</option>
                    <option value="9">09</option>
                    <option value="10">10</option>
                    <option value="11">11</option>
                    <option value="12">12</option>
                </select>
                <span class="input-group-addon"><strong>:</strong></span>
                <select id="ddlLOMinutes" class="form-control" onchange="updateEndMinutes()" required>
                    <option value="" disabled hidden>Min</option>
                    <option value="00">00</option>
                    <option value="15">15</option>
                    <option value="30">30</option>
                    <option value="45">45</option>
                </select>
            </div>
        </div>
        <div class="form-group col-sm-3 end">
            <label class="empty-label">&nbsp;</label>
            <select id="ddlLOAMPM" class="form-control" onchange="updateEndAMPM()" required>
                <option value="" disabled hidden>AM/PM</option>
                <option value="AM">AM</option>
                <option value="PM">PM</option>
            </select>
        </div>
    </div>
</div>
